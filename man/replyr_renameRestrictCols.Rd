% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renameRestrictCols.R
\name{replyr_renameRestrictCols}
\alias{replyr_renameRestrictCols}
\title{Set names of columns to known values and drop other columns}
\usage{
replyr_renameRestrictCols(x, nmap)
}
\arguments{
\item{x}{data item to work on}

\item{nmap}{named list mapping existing columns to desired new names. Doesn't support permutations of names.}
}
\value{
data item with columns limitted down to those named in nmap, and re-named.
}
\description{
Set names of columns to known values and drop other columns
}
\examples{

# an external function with hard-coded column names
DecreaseRankColumnByOne <- function(d) {
  d$RankColumn <- d$RankColumn - 1
  d
}

# our example data, with different column names
d <- data.frame(Sepal_Length=c(5.8,5.7),Sepal_Width=c(4.0,4.4),
                Species='setosa',rank=c(1,2))
print(d)

# map our data to expected column names so we can use function
nmap <- c('GroupColumn','ValueColumn','RankColumn')
names(nmap) <-  c('Species','Sepal_Length','rank')
dm <- replyr_renameRestrictCols(d,nmap)
print(dm)

# can now apply code that expects hard-coded names.
dm <- DecreaseRankColumnByOne(dm)

# map back to our original column names (for the columns we retained)
invmap <- names(nmap)
names(invmap) <- as.character(nmap)
# Note: can only map back columns that were retained in first mapping.
replyr_renameRestrictCols(dm,invmap)

}
\seealso{
\code{\link{let}}
}

